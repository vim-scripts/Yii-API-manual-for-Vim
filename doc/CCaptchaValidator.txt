
*CCaptchaValidator*   >> |CValidator| >> |CComponent|
===================

 CCaptchaValidator validates that the attribute value is the same as the
 verification code displayed in the CAPTCHA.

 CCaptchaValidator should be used together with |CCaptchaAction|.


PROPERTY DETAILS
------------------------------------------------------------------------------

<allowEmpty>				*CCaptchaValidator::allowEmpty*
 (boolean) whether the attribute value can be null or empty. Defaults to
 false, meaning the attribute is invalid if it is empty.

<captchaAction> 			*CCaptchaValidator::captchaAction*
 (CCaptchaAction) Returns the CAPTCHA action object.

<caseSensitive> 			*CCaptchaValidator::caseSensitive*
 (boolean) whether the comparison is case sensitive. Defaults to false.



METHOD DETAILS
------------------------------------------------------------------------------

*CCaptchaValidator::clientValidateAttribute*			 public
>
 clientValidateAttribute($object, $attribute)
<
(string) the client-side validation script.

 Returns the JavaScript needed for performing client-side validation.
    [object] (CModel) the data object being validated
    [attribute] (string) the name of the attribute to be validated.


*CCaptchaValidator::getCaptchaAction*				 protected
>
 getCaptchaAction()
<
(CCaptchaAction) the action object

 Returns the CAPTCHA action object.


*CCaptchaValidator::validateAttribute*				 protected
>
 validateAttribute($object, $attribute)
<
(void)

 Validates the attribute of the object. If there is any error, the error
 message is added to the object.
    [object] (CModel) the object being validated
    [attribute] (string) the attribute being validated



 vim:tw=78:ts=8:ft=help:norl:
