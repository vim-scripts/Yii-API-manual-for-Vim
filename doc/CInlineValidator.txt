
*CInlineValidator*   >> |CValidator| >> |CComponent|
==================

 CInlineValidator represents a validator which is defined as a method in the
 object being validated.


PROPERTY DETAILS
------------------------------------------------------------------------------

<clientValidate>			*CInlineValidator::clientValidate*
 (string) the name of the method that returns the client validation code (See
 |CInlineValidator::clientValidateAttribute|).

<method>				*CInlineValidator::method*
 (string) the name of the validation method defined in the active record class

<params>				*CInlineValidator::params*
 (array) additional parameters that are passed to the validation method



METHOD DETAILS
------------------------------------------------------------------------------

*CInlineValidator::clientValidateAttribute*			 public
>
 clientValidateAttribute($object, $attribute)
<
(string) the client-side validation script.

 Returns the JavaScript code needed to perform client-side validation by
 calling the |CInlineValidator::clientValidate| method. In the client
 validation code, these variables are predefined:
   {value} the current input value associated with this attribute.
   {messages} an array that may be appended with new error messages
   for the attribute.
   {attribute} a data structure keeping all client-side options for
   the attribute<b>Example</b>:

 If |CInlineValidator::clientValidate| is set to "clientValidate123",
 clientValidate123() is the name of the method that returns the client
 validation code and can look like:
>
 <?php
   public function clientValidate123($attribute)
   {
      $js = "if(value != '123') { messages.push('Value should be 123'); }";
      return $js;
   }
 ?>
<
    [object] (CModel) the data object being validated
    [attribute] (string) the name of the attribute to be validated.


*CInlineValidator::validateAttribute*				 protected
>
 validateAttribute($object, $attribute)
<
(void)

 Validates the attribute of the object. If there is any error, the error
 message is added to the object.
    [object] (CModel) the object being validated
    [attribute] (string) the attribute being validated



 vim:tw=78:ts=8:ft=help:norl:
