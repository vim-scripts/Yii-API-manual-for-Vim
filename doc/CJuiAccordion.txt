
*CJuiAccordion*   >> |CJuiWidget| >> |CWidget| >> |CBaseController| >> |CComponent|
===============

 CJuiAccordion displays an accordion widget.

 CJuiAccordion encapsulates the 'JUI Accordion' plugin.

 To use this widget, you may insert the following code in a view:
>
 $this->widget('zii.widgets.jui.CJuiAccordion', array(
     'panels'=>array(
         'panel 1'=>'content for panel 1',
         'panel 2'=>'content for panel 2',
         // panel 3 contains the content rendered by a partial view
         'panel 3'=>$this->renderPartial('_partial',null,true),
     ),
     // additional javascript options for the accordion plugin
     'options'=>array(
         'animated'=>'bounceslide',
     ),
 ));
<
 By configuring the |CJuiAccordion::options| property, you may specify the
 options that need to be passed to the JUI accordion plugin. Please refer to
 the 'JUI Accordion' documentation for possible options (name-value pairs).


PROPERTY DETAILS
------------------------------------------------------------------------------

<contentTemplate>			*CJuiAccordion::contentTemplate*
 (string) the template that is used to generated every panel content. The
 token "{content}" in the template will be replaced with the panel content.

<headerTemplate>			*CJuiAccordion::headerTemplate*
 (string) the template that is used to generated every panel header. The token
 "{title}" in the template will be replaced with the panel title. Note that if
 you make change to this template, you may also need to adjust the 'header'
 setting in |CJuiAccordion::options|.

<panels>				*CJuiAccordion::panels*
 (array) list of panels (panel title=>panel content). Note that neither panel
 title nor panel content will be HTML-encoded.

<tagName>				*CJuiAccordion::tagName*
 (string) the name of the container element that contains all panels. Defaults
 to 'div'.



METHOD DETAILS
------------------------------------------------------------------------------

*CJuiAccordion::run*						 public
>
 run()
<
(void)

 Run this widget. This method registers necessary javascript and renders the
 needed HTML code.



 vim:tw=78:ts=8:ft=help:norl:
