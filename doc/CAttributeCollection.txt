
*CAttributeCollection*   >> |CMap| >> |CComponent|
======================

 CAttributeCollection implements a collection for storing attribute names and
 values.

 Besides all functionalities provided by |CMap|, CAttributeCollection allows
 you to get and set attribute values like getting and setting properties. For
 example, the following usages are all valid for a CAttributeCollection
 object:
>
 $collection->text='text'; // same as:  $collection->add('text','text');
 echo $collection->text;   // same as:  echo $collection->itemAt('text');
<
 The case sensitivity of attribute names can be toggled by setting the
 |CAttributeCollection::caseSensitive| property of the collection.


PROPERTY DETAILS
------------------------------------------------------------------------------

<caseSensitive> 			*CAttributeCollection::caseSensitive*
 (boolean) whether the keys are case-sensitive. Defaults to false.



METHOD DETAILS
------------------------------------------------------------------------------

*CAttributeCollection::__get*					 public
>
 __get($name)
<
(mixed) the property value or the event handler list

 Returns a property value or an event handler list by property or event name.
 This method overrides the parent implementation by returning a key value if
 the key exists in the collection.
    [name] (string) the property name or the event name


*CAttributeCollection::__isset* 				 public
>
 __isset($name)
<
(boolean) whether the property value is null

 Checks if a property value is null. This method overrides the parent
 implementation by checking if the key exists in the collection and contains a
 non-null value.
    [name] (string) the property name or the event name


*CAttributeCollection::__set*					 public
>
 __set($name, $value)
<
(void)

 Sets value of a component property. This method overrides the parent
 implementation by adding a new key value to the collection.
    [name] (string) the property name or event name
    [value] (mixed) the property value or event handler


*CAttributeCollection::__unset* 				 public
>
 __unset($name)
<
(void)

 Sets a component property to be null. This method overrides the parent
 implementation by clearing the specified key value.
    [name] (string) the property name or the event name


*CAttributeCollection::add*					 public
>
 add($key, $value)
<
(void)

 Adds an item into the map. This overrides the parent implementation by
 converting the key to lower case first if
 |CAttributeCollection::caseSensitive| is false.
    [key] (mixed) key
    [value] (mixed) value


*CAttributeCollection::canGetProperty*				 public
>
 canGetProperty($name)
<
(boolean) whether the property can be read

 Determines whether a property can be read. This method overrides parent
 implementation by returning true if the collection contains the named key.
    [name] (string) the property name


*CAttributeCollection::canSetProperty*				 public
>
 canSetProperty($name)
<
(boolean) true

 Determines whether a property can be set. This method overrides parent
 implementation by always returning true because you can always add a new
 value to the collection.
    [name] (string) the property name


*CAttributeCollection::contains*				 public
>
 contains($key)
<
(boolean) whether the map contains an item with the specified key

 Returns whether the specified is in the map. This overrides the parent
 implementation by converting the key to lower case first if
 |CAttributeCollection::caseSensitive| is false.
    [key] (mixed) the key


*CAttributeCollection::hasProperty*				 public
>
 hasProperty($name)
<
(boolean) whether the property is defined

 Determines whether a property is defined. This method overrides parent
 implementation by returning true if the collection contains the named key.
    [name] (string) the property name


*CAttributeCollection::itemAt*					 public
>
 itemAt($key)
<
(mixed) the element at the offset, null if no element is found at the offset

 Returns the item with the specified key. This overrides the parent
 implementation by converting the key to lower case first if
 |CAttributeCollection::caseSensitive| is false.
    [key] (mixed) the key


*CAttributeCollection::remove*					 public
>
 remove($key)
<
(mixed) the removed value, null if no such key exists.

 Removes an item from the map by its key. This overrides the parent
 implementation by converting the key to lower case first if
 |CAttributeCollection::caseSensitive| is false.
    [key] (mixed) the key of the item to be removed



 vim:tw=78:ts=8:ft=help:norl:
