
*CMaskedTextField*   >> |CInputWidget| >> |CWidget| >> |CBaseController| >> |CComponent|
==================

 CMaskedTextField generates a masked text field.

 CMaskedTextField is similar to |CHtml::textField| except that an input mask
 will be used to help users enter properly formatted data. The masked text
 field is implemented based on the jQuery masked input plugin (see
 'http://digitalbush.com/projects/masked-input-plugin').


PROPERTY DETAILS
------------------------------------------------------------------------------

<charMap>				*CMaskedTextField::charMap*
 (array) the mapping between mask characters and the corresponding patterns.
 For example, array('~'=>'[+-]') specifies that the '~' character expects '+'
 or '-' input. Defaults to null, meaning using the map as described in
 |CMaskedTextField::mask|.

<clientOptions> 			*CMaskedTextField::clientOptions*
 (array) the options for the text field

<completed>				*CMaskedTextField::completed*
 (string) a JavaScript function callback that will be invoked when user
 finishes the input.

<mask>					*CMaskedTextField::mask*
 (string) the input mask (e.g. '99/99/9999' for date input). The following
 characters are predefined:
   {a} represents an alpha character (A-Z,a-z).
   {9} represents a numeric character (0-9).
   *: represents an alphanumeric character (A-Z,a-z,0-9).
   ?: anything listed after '?' within the mask is considered
   optional user input.Additional characters can be defined by specifying the
 |CMaskedTextField::charMap| property.

<placeholder>				*CMaskedTextField::placeholder*
 (string) the character prompting for user input. Defaults to underscore '_'.



METHOD DETAILS
------------------------------------------------------------------------------

*CMaskedTextField::getClientOptions*				 protected
>
 getClientOptions()
<
(array) the options for the text field



*CMaskedTextField::registerClientScript*			 public
>
 registerClientScript()
<
(void)

 Registers the needed CSS and JavaScript.


*CMaskedTextField::run* 					 public
>
 run()
<
(void)

 Executes the widget. This method registers all needed client scripts and
 renders the text field.



 vim:tw=78:ts=8:ft=help:norl:
