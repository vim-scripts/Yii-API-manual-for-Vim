
*COutputProcessor*   >> |CFilterWidget| >> |CWidget| >> |CBaseController| >> |CComponent|
==================

 COutputProcessor transforms the content into a different format.

 COutputProcessor captures the output generated by an action or a view
 fragment and passes it to its |COutputProcessor::onProcessOutput| event
 handlers for further processing.

 The event handler may process the output and store it back to the
 |COutputEvent::output| property. By setting the |CEvent::handled| property of
 the event parameter to true, the output will not be echoed anymore. Otherwise
 (by default), the output will be echoed.



METHOD DETAILS
------------------------------------------------------------------------------

*COutputProcessor::init*					 public
>
 init()
<
(void)

 Initializes the widget. This method starts the output buffering.


*COutputProcessor::onProcessOutput*				 public
>
 onProcessOutput($event)
<
(void)

 Raised when the output has been captured.
    [event] (COutputEvent) event parameter


*COutputProcessor::processOutput*				 public
>
 processOutput($output)
<
(void)

 Processes the captured output.

 The default implementation raises an |COutputProcessor::onProcessOutput|
 event. If the event is not handled by any event handler, the output will be
 echoed.
    [output] (string) the captured output to be processed


*COutputProcessor::run* 					 public
>
 run()
<
(void)

 Executes the widget. This method stops output buffering and processes the
 captured output.



 vim:tw=78:ts=8:ft=help:norl:
